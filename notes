7x7 grid can manage seven points

*.*....
..*....
......*
*......
.......
.....*.
......*

Looks like 8x8 can't manage eight, and 9x9 can manage eight

Can 10x10 manage nine?

2x2x2 cube: three points, three distances, S4 ways
3x3x3 cube: four points, six distances, 960 ways.  No ways with five points
4x4x4 cube: five points, ten distances, 138960 ways
Six points, fifteen distances, 1728 ways, minimum maximum squared distance is 19 in 48x(1+1+4) ways.  [[0, 0, 0], [0, 0, 2], [1, 3, 0], [1, 3, 3], [2, 2, 2], [2, 3, 2]]
Seven points: impossible

5x5x5 cube: seven points, 21 distances, at least one way, almost certainly myriads of ways but my search is inefficient.  [[0, 0, 0], [0, 0, 1], [0, 0, 3], [0, 4, 0], [1, 3, 1], [2, 4, 1], [3, 3, 3]] [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27]
5x5x5, eight points, 



4x4x4, 5 points     45.7s
7x7, 7 points      601.1s

10x10, seeking 9 points; some solutions exist


Wrote extend.py which avoids searching for lots of successors when the start of the configuration is dud.  This is a lot faster for situations with few solutions but a bit slower for situations like (12,3)
where almost everything is a solution

3       40      0         0                     
4       388     184       0                     
5       1784    3136      280      0            
6       5932    21920     12632    16           
7       15936   99296     162352   23552        8       
8       37160   352220    1185264  726616       26800   0
9       77544   1021248   5611384  7848784      1304720 4376
10      149216  2608280   21440616 57204528                    416
11      268784  5996280                         
12      459204  12730588                                

Need to translate to rust and use a bitset rather than a full-fat Set because I'm dealing with a set of small integers
 Parallelism over starts is obvious

On the other hand I get a cheap factor five by
 * break the first time I notice a distance repeats
 * compute the distance once and store it rather than doing it twice
 * clone the distance-set rather than regenerating it every time

7,6 new 19.24
7,6 old 101.68
8,6 new 156.16
8,6 old 528.83
8,7 new 198.48
8,7 newer 36.06
9,6 new 849.70
9,7 new 1526.48
9,7 newer 341.60
9,8 new 1794.10

10,9 new 13514.79

11,10 newer


10,5 old 456.16
11,5 old

10,6 newer

9,9 newer

CUBES
=====

2       24        0
3       1896      960       0
4       32816     186624    138960    1728      0
5       270822    4368024   19914624  10946256  202704
6       1478960   50345280  
7	6121034